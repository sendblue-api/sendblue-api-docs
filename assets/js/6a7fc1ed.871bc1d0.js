"use strict";(self.webpackChunksendblue_api=self.webpackChunksendblue_api||[]).push([[948],{1592:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>l,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"get-messages","title":"Get Messages | Sendblue Documentation","description":"iMessage for Business | Retrieve messages - Sendblue","source":"@site/docs/get-messages.md","sourceDirName":".","slug":"/get-messages","permalink":"/docs/get-messages","draft":false,"unlisted":false,"editUrl":"https://github.com/sendblue-api/sendblue-api.github.io/blob/gh-pages/docs/docs/get-messages.md","tags":[],"version":"current","frontMatter":{"id":"get-messages","title":"Get Messages | Sendblue Documentation","description":"iMessage for Business | Retrieve messages - Sendblue","sidebar_label":"Get Messages"},"sidebar":"someSidebar","previous":{"title":"Group Messages","permalink":"/docs/groups"},"next":{"title":"Expressive Messages","permalink":"/docs/expressive-messages"}}');var a=n(4848),r=n(8453);const o={id:"get-messages",title:"Get Messages | Sendblue Documentation",description:"iMessage for Business | Retrieve messages - Sendblue",sidebar_label:"Get Messages"},i=void 0,l={},d=[{value:"Get Messages",id:"get-messages",level:2},{value:"Query Parameters",id:"query-parameters",level:3},{value:"Sample Request",id:"sample-request",level:3},{value:"Sample Response",id:"sample-response",level:2}];function c(e){const s={code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(s.p,{children:"The Sendblue API allows you to retrieve messages sent or received for your account."}),"\n",(0,a.jsx)(s.h2,{id:"get-messages",children:"Get Messages"}),"\n",(0,a.jsx)(s.p,{children:"To retrieve messages, make a GET request to the following endpoint:"}),"\n",(0,a.jsx)(s.p,{children:(0,a.jsx)(s.code,{children:"GET https://api.sendblue.co/accounts/messages"})}),"\n",(0,a.jsx)(s.h3,{id:"query-parameters",children:"Query Parameters"}),"\n",(0,a.jsxs)(s.ul,{children:["\n",(0,a.jsxs)(s.li,{children:[(0,a.jsx)(s.code,{children:"cid"})," (optional): Filter messages by conversation ID (contact ID)."]}),"\n",(0,a.jsxs)(s.li,{children:[(0,a.jsx)(s.code,{children:"number"})," (optional): Filter messages by the sender or recipient's phone number."]}),"\n",(0,a.jsxs)(s.li,{children:[(0,a.jsx)(s.code,{children:"limit"})," (optional): The maximum number of messages to retrieve per request."]}),"\n",(0,a.jsxs)(s.li,{children:[(0,a.jsx)(s.code,{children:"offset"})," (optional): The offset for paginating through messages."]}),"\n",(0,a.jsxs)(s.li,{children:[(0,a.jsx)(s.code,{children:"from_date"}),' (optional): Filter messages sent after the specified date and time (e.g., "2023-06-15 12:00:00").']}),"\n"]}),"\n",(0,a.jsxs)(s.p,{children:["If no ",(0,a.jsx)(s.code,{children:"cid"})," or ",(0,a.jsx)(s.code,{children:"number"})," is defined, the endpoint will return all messages for the contact making the request (defined by your keys sent by the headers)."]}),"\n",(0,a.jsx)(s.h3,{id:"sample-request",children:"Sample Request"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-bash",children:"curl --location --request GET 'https://api.sendblue.co/accounts/messages?limit=50&offset=10&number=+12345678912&from_date=2023-06-15%2012:00:00' \\\n--header 'sb-api-key-id: YOUR_SB_API_KEY_ID' \\\n--header 'sb-api-secret-key: YOUR_SB_API_SECRET_KEY'\n"})}),"\n",(0,a.jsx)(s.p,{children:"Here is the same with Node.js and Axios"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-js",children:'const axios = require("axios");\n\nconst url = "https://api.sendblue.co/accounts/messages";\n\naxios\n  .get(url, {\n    headers: {\n      "SB-API-KEY-ID": "YOUR_SB_API_KEY_ID",\n      "SB-API-SECRET-KEY": "YOUR_SB_API_SECRET_KEY",\n    },\n    params: {\n      limit: 50,\n      offset: 0,\n      number: "+12345678912",\n      from_date: "2023-06-15 12:00:00",\n    },\n  })\n  .then((response) => {\n    console.log(response.data);\n  })\n  .catch((error) => {\n    console.log(error);\n  });\n'})}),"\n",(0,a.jsx)(s.h2,{id:"sample-response",children:"Sample Response"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-json",children:'{\n  "messages": [\n    {\n      "date": "2023-08-15T16:04:38.866Z",\n      "allowSMS": null,\n      "sendStyle": "",\n      "type": "message",\n      "uuid": "e8942f7a-c1d2-49e1-b35f-68958754635d",\n      "media_url": "",\n      "content": "Hey",\n      "number": "+12345678912",\n      "is_outbound": true,\n      "accountEmail": "youremail@gmail.com",\n      "was_downgraded": false,\n      "callbackURL": "",\n      "row_id": null,\n      "status": "QUEUED"\n    },\n    {\n      "error_message": null,\n      "date": "2023-09-21T20:22:05.066Z",\n      "to_number": "+12345678912",\n      "date_sent": {\n        "_seconds": 1695327725,\n        "_nanoseconds": 66000000\n      },\n      "date_updated": {\n        "_seconds": 1695327725,\n        "_nanoseconds": 456000000\n      },\n      "error_detail": null,\n      "phoneID": "worker_5s_spacegray_1",\n      "message_type": "message",\n      "uuid": "595578e5-6701-4b89-ac9b-28cbfe99cd",\n      "media_url": "",\n      "content": "test\\n - Sent using sendblue.co",\n      "send_style": "",\n      "callback_url": "",\n      "is_outbound": true,\n      "allow_sms": false,\n      "accountEmail": "youremail@gmail.com",\n      "was_downgraded": null,\n      "group_id": "",\n      "from_number": "+88888888888",\n      "error_code": 22,\n      "row_id": "4444",\n      "status": "ERROR"\n    }\n  ]\n}\n'})})]})}function u(e={}){const{wrapper:s}={...(0,r.R)(),...e.components};return s?(0,a.jsx)(s,{...e,children:(0,a.jsx)(c,{...e})}):c(e)}},8453:(e,s,n)=>{n.d(s,{R:()=>o,x:()=>i});var t=n(6540);const a={},r=t.createContext(a);function o(e){const s=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function i(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),t.createElement(r.Provider,{value:s},e.children)}}}]);