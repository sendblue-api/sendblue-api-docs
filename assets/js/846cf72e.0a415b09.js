"use strict";(self.webpackChunksendblue_api=self.webpackChunksendblue_api||[]).push([[708],{5159:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>r,contentTitle:()=>c,default:()=>u,frontMatter:()=>i,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"get-contacts","title":"Get Contacts","description":"iMessage for Business | Retrieve contacts - Sendblue","source":"@site/docs/get-contacts.md","sourceDirName":".","slug":"/get-contacts","permalink":"/docs/get-contacts","draft":false,"unlisted":false,"editUrl":"https://github.com/sendblue-api/sendblue-api.github.io/blob/gh-pages/docs/docs/get-contacts.md","tags":[],"version":"current","frontMatter":{"id":"get-contacts","title":"Get Contacts","description":"iMessage for Business | Retrieve contacts - Sendblue","sidebar_label":"Get Contacts"},"sidebar":"someSidebar","previous":{"title":"Create Contact","permalink":"/docs/create-contact"},"next":{"title":"Get Contact by ID","permalink":"/docs/get-contact-by-id"}}');var a=n(4848),o=n(8453);const i={id:"get-contacts",title:"Get Contacts",description:"iMessage for Business | Retrieve contacts - Sendblue",sidebar_label:"Get Contacts"},c=void 0,r={},l=[{value:"Get Contacts",id:"get-contacts",level:2},{value:"Query Parameters",id:"query-parameters",level:3},{value:"Sample Request",id:"sample-request",level:3},{value:"Sample Response",id:"sample-response",level:2}];function d(e){const t={code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.p,{children:"The Sendblue API allows you to retrieve a list of contacts. This endpoint can be used to fetch contacts with various filtering and pagination options."}),"\n",(0,a.jsx)(t.h2,{id:"get-contacts",children:"Get Contacts"}),"\n",(0,a.jsx)(t.p,{children:"To retrieve contacts, make a GET request to the following endpoint:"}),"\n",(0,a.jsx)(t.p,{children:(0,a.jsx)(t.code,{children:"GET https://api.sendblue.co/accounts/contacts"})}),"\n",(0,a.jsx)(t.h3,{id:"query-parameters",children:"Query Parameters"}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.code,{children:"order_direction"}),' (optional): The order direction for sorting contacts, can be "asc" (ascending) or "desc" (descending) (default is "desc").']}),"\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.code,{children:"limit"})," (optional): The maximum number of contacts to retrieve per request."]}),"\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.code,{children:"offset"})," (optional): The offset for paginating through contacts."]}),"\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.code,{children:"order_by"}),' (optional): The field by which to order contacts, such as "last_date" or another suitable field.']}),"\n"]}),"\n",(0,a.jsx)(t.h3,{id:"sample-request",children:"Sample Request"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-bash",children:"curl --location --request GET 'https://api.sendblue.co/accounts/contacts?order_direction=asc&limit=2&offset=30&order_by=last_date' \\\n--header 'sb-api-key-id: YOUR_SB_API_KEY_ID' \\\n--header 'sb-api-secret-key: YOUR_SB_API_SECRET_KEY'\n"})}),"\n",(0,a.jsx)(t.p,{children:"Here is the same in Node.js with Axios"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-js",children:'const axios = require("axios");\n\nconst url = "https://api.sendblue.co/accounts/contacts";\n\naxios\n  .get(url, {\n    headers: {\n      "sb-api-key-id": "YOUR_SB_API_KEY_ID",\n      "sb-api-secret-key": "YOUR_SB_API_SECRET_KEY",\n    },\n    params: {\n      order_direction: "asc",\n      limit: 2,\n      offset: 30,\n      order_by: "last_date",\n    },\n  })\n  .then((response) => {\n    console.log(response.data);\n  })\n  .catch((error) => {\n    console.error(error);\n  });\n'})}),"\n",(0,a.jsx)(t.h2,{id:"sample-response",children:"Sample Response"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-json",children:'[\n  {\n    "firstName": "John",\n    "lastName": "Doe",\n    "account_email": "your@email.com",\n    "displayPhone": "+1 9 999 999 9999",\n    "is_unread": false,\n    "displayDate": "6/8/23 7:39 PM",\n    "previewText": "this is the latest message that i, John, sent you",\n    "last_date": "2023-06-08T19:39:59.312Z",\n    "phone": "+19999999999",\n    "cid": "BUjbHDKzAQqs9M6bWAq5"\n  },\n  {\n    "account_email": "your@email.com",\n    "firstName": "Jane",\n    "lastName": "Doe",\n    "displayPhone": "+1 888 888 8888",\n    "is_unread": false,\n    "displayDate": "6/22/23 4:28 PM",\n    "previewText": "this is the latest message that i, Jane, sent you",\n    "last_date": "2023-06-22T19:28:01.937Z",\n    "phone": "+18888888888",\n    "cid": "LGHRAbQyxrk57EXkxMWb"\n  }\n]\n'})})]})}function u(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>i,x:()=>c});var s=n(6540);const a={},o=s.createContext(a);function i(e){const t=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),s.createElement(o.Provider,{value:t},e.children)}}}]);